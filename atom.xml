<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>blog.pagesd.info</title>
    <subtitle>Un peu de tout et n&#39;importe quoi...</subtitle>
    <link href="https://blog.pagesd.info/" rel="alternate" hreflang="fr-FR" />
    <updated>2021-12-20T12:29:43.000Z</updated>
    <id>https://blog.pagesd.info/atom.xml</id>
    <link href="https://blog.pagesd.info/atom.xml" rel="self" type="application/atom+xml" />
    <author>
        <name>Michel</name>
    </author>
    <entry>
        <title type="html">Création de mon site Eleventy</title>
        <link href="https://blog.pagesd.info/2021/12/20/eleventy-creation-site/" rel="alternate" hreflang="fr-FR" />
        <updated>2021-12-20T12:29:43.000Z</updated>
        <published>2021-12-20T12:29:43.000Z</published>
        <id>https://blog.pagesd.info/2021/12/20/eleventy-creation-site/</id>
        <summary>Pour migrer mon ancien blogue de Jekyll vers Eleventy, j&#39;ai commencé de façon classique en suivant les instructions disponibles un peu partout, en particulier la page Getting started sur le site d&#39;Eleventy.</summary>
        <content type="html" xml:lang="fr-FR" xml:base="https://blog.pagesd.info">
&lt;p&gt;Pour migrer mon ancien blogue de Jekyll vers Eleventy, j&#39;ai commencé de façon classique en suivant les instructions disponibles un peu partout, en particulier la page &lt;a href=&quot;https://www.11ty.dev/docs/getting-started/&quot;&gt;Getting started&lt;/a&gt; sur le site d&#39;Eleventy.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir blog11
cd blog11
npm init -y
npm install --save-dev @11ty/eleventy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Puis sous VS Code, je modifie l&#39;entrée &amp;quot;scripts&amp;quot; du fichier &amp;quot;package.json&amp;quot; pour pouvoir facilement lancer mon site par un simple &lt;code&gt;npm start&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &amp;quot;scripts&amp;quot;: {
    &amp;quot;build&amp;quot;: &amp;quot;npx @11ty/eleventy&amp;quot;,
    &amp;quot;start&amp;quot;: &amp;quot;npx @11ty/eleventy --serve&amp;quot;
  },
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Comme je vais utiliser &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;, je crée un fichier &amp;quot;.gitignore&amp;quot; pour indiquer les éléments que Git ne doit pas gérer.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node_modules/
package-lock.json
_site/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note : Pour l&#39;instant, j&#39;exclus les classiques &amp;quot;node_modules/&amp;quot; et &amp;quot;package-lock.json&amp;quot; comme dans tous mes projets Node JS. J&#39;y ajoute le dossier &amp;quot;_site/&amp;quot; où Eleventy génèrera le contenu du site.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Par défaut, Eleventy ne gère pas les fichiers référencés dans le fichier &amp;quot;.gitignore&amp;quot;. Mais il est également possible d&#39;exclure d&#39;autres fichiers spécifiquement pour Eleventy en utilisant un fichier &amp;quot;.eleventyignore&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;README.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pour entrer dans le vif du sujet, j&#39;ajoute le fichier &amp;quot;.eleventy.js&amp;quot; pour configurer Eleventy. Ce fichier sert à regrouper tout ce qui permet de configurer Eleventy, y compris pour remplacer certains trucs qui sinon devraient être gérés au niveau de la ligne de commande.&lt;/p&gt;
&lt;p&gt;Dans mon cas, je copie le contenu proposé par Sia Karamalegos dans son tutoriel &lt;a href=&quot;https://sia.codes/posts/itsiest-bitsiest-eleventy-tutorial/&quot;&gt;Itsiest, Bitsiest Eleventy Tutorial&lt;/a&gt; qui reprend uniquement les valeurs par défaut employées par Eleventy. Mais je trouve plus clair de savoir à quoi m&#39;attendre.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = function(eleventyConfig) {
  // Set custom directories for input, output, includes, and data
  return {
    dir: {
      input: &amp;quot;src&amp;quot;,
      includes: &amp;quot;_includes&amp;quot;,
      data: &amp;quot;_data&amp;quot;,
      output: &amp;quot;_site&amp;quot;
    }
  };
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;La ligne &lt;code&gt;input: &amp;quot;src&amp;quot;&lt;/code&gt; indique que les fichiers sources du site sont stockés dans le répertoire &amp;quot;src&amp;quot;. Je crée donc ce répertoire.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir src
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;La ligne &lt;code&gt;includes: &amp;quot;_includes&amp;quot;&lt;/code&gt; indique que la charte graphique sera stockée dans le répertoire &amp;quot;_includes&amp;quot; du dossier &amp;quot;src&amp;quot;. De même, la ligne &lt;code&gt;data: &amp;quot;_data&amp;quot;&lt;/code&gt; indique que le paramétrage global du site est enregistré dans le répertoire &amp;quot;_data&amp;quot; du dossier &amp;quot;src&amp;quot;. Je crée donc ces 2 répertoires à l&#39;intérieur du répertoire &amp;quot;src&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd src
mkdir _includes
mkdir _data
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pour tester que ça marche, je crée enfin un premier fichier &amp;quot;index.md&amp;quot; dans le répertoire &amp;quot;src&amp;quot; avec un peu de contenu.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;# Mon nouveau Blogue

C&#39;est parti pour la migration de Jekyll vers Eleventy.

Jusqu&#39;ici tout va bien...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Puis je &amp;quot;compile&amp;quot; :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ce qui donne :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; blog11@1.0.0 start
&amp;gt; npx @11ty/eleventy --serve

Writing _site/index.html from ./src/index.md.
Wrote 1 file in 0.21 seconds (v0.12.1)
Watching…
[Browsersync] Access URLs:
 ---------------------------------------
       Local: http://localhost:8080
    External: http://192.168.42.236:8080
 ---------------------------------------
          UI: http://localhost:3001
 UI External: http://localhost:3001
 ---------------------------------------
[Browsersync] Serving files from: _site
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Déjà il n&#39;y a pas d&#39;erreur ! Et je peux aller voir le site généré sur &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/eleventy-001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;C&#39;est bien. Mais si j&#39;affiche le code source de cette page, je peux constater que ce n&#39;est pas un contenu HTML complet. On n&#39;y retrouve que les 3 lignes du fichier source transformées en HTML.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;h1&amp;gt;Mon nouveau Blogue&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;C&#39;est parti pour la migration de Jekyll vers Eleventy.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Jusqu&#39;ici tout va bien...&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Je vais donc devoir ajouter un &amp;quot;layout&amp;quot; pour que Eleventy ait un &amp;quot;cadre&amp;quot; où insérer le HTML qu&#39;il génère à partir des fichiers Markdown. Pour cela, je crée un fichier &amp;quot;layout.njk&amp;quot; dans le sous-répertoire &amp;quot;src/_includes&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-njk&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;fr-FR&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
  &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
  &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;Mon nouveau blogue&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;!-- Le contenu généré par Eleventy sera ajouté là --&amp;gt;
  {{ content | safe }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Puis il faut que j&#39;indique à Eleventy d&#39;utiliser ce layout lorsqu&#39;il génère le contenu du site. Pour cela, j&#39;ajoute un &amp;quot;front matter&amp;quot; au tout début du fichier &amp;quot;index.md&amp;quot; qui devient alors :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;---
layout: layout.njk
---
# Mon nouveau Blogue

C&#39;est parti pour la migration de Jekyll vers Eleventy.

Jusqu&#39;ici tout va bien...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lorsque je sauvegarde le fichier, le site est recompilé automatiquement, car la commande &amp;quot;npm start&amp;quot; (qui a lancé la commande &lt;code&gt;npx @11ty/eleventy --serve&lt;/code&gt;) est toujours en cours dans le terminal de VS Code.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;File changed: src\index.md
Writing _site/index.html from ./src/index.md.
Wrote 1 file in 0.07 seconds (v0.12.1)
Watching…
[Browsersync] Reloading Browsers...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Et le contenu du navigateur est lui aussi automatiquement rafraichi (grâce à &lt;a href=&quot;https://browsersync.io/&quot;&gt;Browsersync&lt;/a&gt; qui est utilisé par Eleventy).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/eleventy-002.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Rien qu&#39;au titre de l&#39;onglet qui est passé de &amp;quot;localhost:8080&amp;quot; à &amp;quot;Mon nouveau blogue&amp;quot;, je peux voir que Eleventy a bien pris en compte le nouveau layout. Mais ça ne coûte qu&#39;un clic-droit de vérifier en affichant le code source de la page.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;fr-FR&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
  &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
  &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;Mon nouveau blogue&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;&amp;lt;script id=&amp;quot;__bs_script__&amp;quot;&amp;gt;//&amp;lt;![CDATA[
    document.write(&amp;quot;&amp;lt;script async src=&#39;/browser-sync/browser-sync-client.js?v=2.27.7&#39;&amp;gt;&amp;lt;\/script&amp;gt;&amp;quot;.replace(&amp;quot;HOST&amp;quot;, location.hostname));
//]]&amp;gt;&amp;lt;/script&amp;gt;

  &amp;lt;!-- Le contenu généré par Eleventy sera ajouté là --&amp;gt;
  &amp;lt;h1&amp;gt;Mon nouveau Blogue&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;C&#39;est parti pour la migration de Jekyll vers Eleventy.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Jusqu&#39;ici tout va bien...&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C&#39;est pas mal !&lt;/p&gt;
&lt;p&gt;Mais comme on peut le voir, le titre de mon nouveau blogue apparait 2 fois : une première dans la balise &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; et une seconde dans la balise &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;. Ce qui est assez normal. Ce qui est moins amusant, c&#39;est que pour cela j&#39;ai dû le répéter dans 2 fichiers différents :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dans &amp;quot;layout.njk&amp;quot; pour qu&#39;il apparaisse dans la balise &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;dans &amp;quot;index.md&amp;quot; pour qu&#39;il s&#39;affiche dans le titre &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Et qu&#39;en plus je n&#39;ai même pas été foutu de l&#39;écrire de la même façon à chaque fois :)&lt;/p&gt;
&lt;p&gt;C&#39;est là que le dossier &amp;quot;src/_data&amp;quot; va servir. Je vais créer un fichier &amp;quot;site.json&amp;quot; pour y renseigner tous les informations globales du site. Ça correspond au fichier &amp;quot;_config.yml&amp;quot; de Jekyll.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &amp;quot;title&amp;quot;: &amp;quot;Mon nouveau Blogue&amp;quot;,
    &amp;quot;url&amp;quot;: &amp;quot;https://mon.nouveau.blog&amp;quot;,
    &amp;quot;lang&amp;quot;: &amp;quot;fr-FR&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;Mon blog, de 2004 à aujourd&#39;hui...&amp;quot;,
    &amp;quot;author&amp;quot;: &amp;quot;Michel&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;J&#39;en ai mis un peu plus...&lt;/p&gt;
&lt;p&gt;Maintenant, je peux mettre à jour le layout pour y utiliser les variables globales &amp;quot;site.lang&amp;quot; et &amp;quot;site.title&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-njk&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;{{ site.lang }}&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
  &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
  &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;{{ site.title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;!-- Le contenu généré par Eleventy sera ajouté là --&amp;gt;
  {{ content | safe }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Et aussi le fichier &amp;quot;index.md&amp;quot; pour y utiliser la variable globale &amp;quot;site.title&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;---
layout: layout.njk
---
# {{ site.title }}

C&#39;est parti pour la migration de Jekyll vers Eleventy.

Jusqu&#39;ici tout va bien...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Je retourne sur le navigateur et je peux constater que maintenant c&#39;est bien &amp;quot;Mon nouveau Blogue&amp;quot; partout.&lt;/p&gt;
&lt;p&gt;Un dernier truc pour aujourd&#39;hui. Comme le site va contenir plusieurs pages et des tas de billets, je vais avoir besoin de définir un titre pour chaque page en plus du titre général du site.&lt;/p&gt;
&lt;p&gt;Pour donner un titre à la page, j&#39;ajoute la variable &amp;quot;title&amp;quot; dans le front matter du fichier &amp;quot;index.md&amp;quot; et je remplace l&#39;utilisation de la variable globale &amp;quot;site.title&amp;quot; par celle de cette nouvelle variable.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;---
layout: layout.njk
title: Accueil
---
# {{ title }}

C&#39;est parti pour la migration de Jekyll vers Eleventy.

Jusqu&#39;ici tout va bien...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Puis j&#39;ajoute le titre de la page dans &amp;quot;layout.njk&amp;quot; , pour que l&#39;utilisateur sache sur quelle page il est en plus d&#39;avoir le titre du blogue.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-njk&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;{{ site.lang }}&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
  &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
  &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;{{ title }} - {{ site.title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;!-- Le contenu généré par Eleventy sera ajouté là --&amp;gt;
  {{ content | safe }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ce qui donne :&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/eleventy-003.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Ctrl+C dans le terminal de VS Code pour arrêter la tâche &amp;quot;npm start&amp;quot; et c&#39;est bon pour aujourd&#39;hui.&lt;/p&gt;
&lt;p&gt;Ou alors juste :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;c:\code\blog11&amp;gt; git init -b main
c:\code\blog11&amp;gt; git add .
c:\code\blog11&amp;gt; git commit -m &amp;quot;Création du blog.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

        </content>
        <category term="11ty" />
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.pagesd.info/public/2021/tour-eiffel.jpg" />
        <media:content xmlns:media="http://search.yahoo.com/mrss/" medium="image" url="https://blog.pagesd.info/public/2021/tour-eiffel.jpg" />
    </entry>
    <entry>
        <title type="html">How to create a badge / avatar in CSS</title>
        <link href="https://blog.pagesd.info/2021/12/11/create-badge-avatar-css/" rel="alternate" hreflang="fr-FR" />
        <updated>2021-12-11T09:13:27.000Z</updated>
        <published>2021-12-11T09:13:27.000Z</published>
        <id>https://blog.pagesd.info/2021/12/11/create-badge-avatar-css/</id>
        <summary>Ce n&#39;est pas très compliqué, et en à peine 30 lignes de CSS et une pincée de flexbox on peut afficher des badges ou des avatars très corrects.</summary>
        <content type="html" xml:lang="fr-FR" xml:base="https://blog.pagesd.info">
&lt;p&gt;Some time ago, I built a small application to easily review my helpdesk tickets. I no longer use this program, but it gave me the opportunity to present the exchanges as a conversation. As a backup, I&#39;m writing here how I displayed the badges to identify the users.&lt;/p&gt;
&lt;p&gt;To start, I create a 100px by 100px square with rounded corners thanks to the &lt;code&gt;border-radius&lt;/code&gt; property at 50% so that the square becomes a circle. Then I color it in green so that it&#39;s visible on a white background and I add a silver border thick enough to make it stand out even better.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* A green circle */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then, I add the initials of the user who wrote the ticket or comment, in white, in big and in bold.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* A green circle */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
    /* White initials */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: 55px;
    font-weight: bold;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;And now I just have to center these initials horizontally and vertically. Fortunately, others have been collecting solutions for a long time to &lt;a href=&quot;https://css-tricks.com/centering-css-complete-guide/&quot;&gt;center everything with CSS&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;I am using the flexbox method:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* A green circle */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
    /* White initials */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: 55px;
    font-weight: bold;
    /* And centered */
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;I would say that it&#39;s not quite in the center and that it falls a bit downwards. But it&#39;s super simple and it solves my problem quite perfectly.&lt;/p&gt;
&lt;p&gt;In the original application, I had a piece of server code to generate a background color based on the user&#39;s trigram. But I&#39;ll leave that aside for now.&lt;/p&gt;
&lt;p&gt;Also, I managed the use of images instead of initials to better highlight some users in the conversation. For that, I used drawings by &lt;a href=&quot;https://www.instagram.com/cameronmarkart/&quot;&gt;Cameron Mark&lt;/a&gt; to represent the two people affected to level 1 helpdesk.&lt;/p&gt;
&lt;p&gt;To be simple, the modification needed to replace the initials with a photo consists of two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display the image corresponding to the person,&lt;/li&gt;
&lt;li&gt;Hide initials that I no longer needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* A green circle */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
    /* White initials */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: 55px;
    font-weight: bold;
    /* And centered */
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }

  .badge-avatar {
    /* Hide initials */
    color: transparent;
    /* Show image */
    background-image: url(&amp;quot;https://blog.pagesd.info/public/2021/queen-of-hearts.png&amp;quot;);
    background-position: center;
    background-size: cover;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge badge-avatar&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The line &lt;code&gt;background-position: center&lt;/code&gt; makes sure that the image is centered. And with &lt;code&gt;background-size: cover&lt;/code&gt;, the picture is resized to be as big as possible (and thus fill the badge as well as possible), while keeping its proportions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-04.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;To add some fun, you can animate the badge when the mouse hovers over the element that contains it, by changing the color of the border.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;  :hover &amp;gt; .badge {
    border-color: orange;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&#39;s almost done. In practice, a 100 pixel wide badge (not counting the 10 pixel borders) takes up a lot of space. And so, in order to be able to define badges of different sizes, I use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties&quot;&gt;CSS variables&lt;/a&gt; to redefine the height and width of the badge, but also the border size and the size of the font.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge-75 {
    --badge-size: 75px;
  }
  
  .badge-200 {
    --badge-size: 200px;
  }
  
  .badge {
    /* A green circle */
    height: var(--badge-size);
    width: var(--badge-size);
    border-radius: 50%;
    background-color: limegreen;
    border: calc(var(--badge-size) / 10) solid lightgray;
    /* White initials */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: calc(var(--badge-size) / 1.75);
    font-weight: bold;
    /* And centered */
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }
  
  .badge-avatar {
    /* Hide initials */
    color: transparent;
    /* Show image */
    background-image: url(&amp;quot;https://blog.pagesd.info/public/2021/queen-of-hearts.png&amp;quot;);
    background-position: center;
    background-size: cover;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge badge-75&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;badge badge-200&amp;quot;&amp;gt;CD&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;badge badge-avatar badge-75&amp;quot;&amp;gt;EF&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;badge badge-avatar badge-200&amp;quot;&amp;gt;GH&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There you go ! Only 30 lines of CSS for a pretty good result. Now, if I ever need it again, I&#39;ll know where to find it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-05.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;encart&quot;&gt;
&lt;p&gt;Version en français : &lt;a href=&quot;/2021/12/10/creer-badge-avatar-css/&quot; hreflang=&quot;fr-FR&quot;&gt;Comment créer un badge / avatar en CSS&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

        </content>
        <category term="css" />
        <category term="html" />
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.pagesd.info/public/2021/systeme-bertillon.jpg" />
        <media:content xmlns:media="http://search.yahoo.com/mrss/" medium="image" url="https://blog.pagesd.info/public/2021/systeme-bertillon.jpg" />
    </entry>
    <entry>
        <title type="html">Comment créer un badge / avatar en CSS</title>
        <link href="https://blog.pagesd.info/2021/12/10/creer-badge-avatar-css/" rel="alternate" hreflang="fr-FR" />
        <updated>2021-12-10T15:47:47.000Z</updated>
        <published>2021-12-10T15:47:47.000Z</published>
        <id>https://blog.pagesd.info/2021/12/10/creer-badge-avatar-css/</id>
        <summary>Ce n&#39;est pas très compliqué, et en à peine 30 lignes de CSS et une pincée de flexbox on peut afficher des badges ou des avatars très corrects.</summary>
        <content type="html" xml:lang="fr-FR" xml:base="https://blog.pagesd.info">
&lt;p&gt;Il y a quelques temps, j&#39;avais développé une petite application pour consulter plus facilement les tickets d&#39;assistance qui m&#39;étaient affectés. J&#39;ai depuis laissé tombé ce programme, mais comme cela m&#39;avait donné l&#39;occasion de présenter les échanges sous forme de conversation, je sauvegarde ici comment j&#39;affichais les badges pour identifier les utilisateurs.&lt;/p&gt;
&lt;p&gt;Pour commencer, je défini un carré de 100px sur 100px auquel j&#39;applique des coins arrondis grâce à la propriété &lt;code&gt;border-radius&lt;/code&gt; à 50% pour que le carré devienne rond. Puis je colorie en vert pour que cela soit visible sur un fond blanc et j&#39;ajoute une bordure argentée assez épaisse pour que cela ressorte encore mieux.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* Un rond vert */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Ensuite, j&#39;ajoute les initiales de la personne qui a écrit le ticket ou le commentaire, en blanc, en gros et en gras.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* Un rond vert */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
    /* Des initiales blanches */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: 55px;
    font-weight: bold;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Et il ne me reste plus qu&#39;à centrer ces initiales horizontalement et verticalement. Heureusement, ça fait longtemps que d&#39;autres collectionnent les solutions pour savoir &lt;a href=&quot;https://css-tricks.com/centering-css-complete-guide/&quot;&gt;comment tout centrer avec CSS&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;J&#39;utilise la méthode à base de flexbox :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* Un rond vert */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
    /* Des initiales blanches */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: 55px;
    font-weight: bold;
    /* Et centrées */
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;A première vue, je dirais que c&#39;est pas tout à fait au centre et que ça penche un peu vers le bas. Mais c&#39;est super simple et ça répond très correctement à mon problème.&lt;/p&gt;
&lt;p&gt;Dans l&#39;application d&#39;origine, j&#39;avais aussi un bout de code côté serveur pour générer une couleur de fond en fonction du trigramme de la personne. Mais je vais laisser ça de côté pour l&#39;instant.&lt;/p&gt;
&lt;p&gt;Par contre, j&#39;avais aussi géré la possibilité d&#39;avoir des images à la place des initiales pour mieux faire ressortir certains utilisateurs dans les conversations. Pour ça, j&#39;avais notamment utilisé des dessins de &lt;a href=&quot;https://www.instagram.com/cameronmarkart/&quot;&gt;Cameron Mark&lt;/a&gt; pour représenter les deux personnes responsables de l&#39;assistance de niveau 1.&lt;/p&gt;
&lt;p&gt;En faisant au plus simple, la modification nécessaire pour remplacer les initiales par une photo consiste en deux choses :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Afficher l&#39;image correspondant à la personne,&lt;/li&gt;
&lt;li&gt;Masquer les initiales devenues inutiles.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge {
    /* Un rond vert */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: limegreen;
    border: 10px solid silver;
    /* Des initiales blanches */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: 55px;
    font-weight: bold;
    /* Et centrées */
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }

  .badge-avatar {
    /* Cacher les initiales */
    color: transparent;
    /* Afficher l&#39;image */
    background-image: url(&amp;quot;https://blog.pagesd.info/public/2021/queen-of-hearts.png&amp;quot;);
    background-position: center;
    background-size: cover;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge badge-avatar&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;La ligne &lt;code&gt;background-position: center&lt;/code&gt; permet de s&#39;assurer que l&#39;image est bien centrée. Et avec &lt;code&gt;background-size: cover&lt;/code&gt;, la photo est redimensionnée au mieux pour être aussi grande que possible (et donc remplir au mieux le badge), tout en conservant ses proportions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-04.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Pour donner un peu de vie à l&#39;interface utilisateur, on peut animer le badge quand la souris survole l&#39;élément qui le contient, en changeant la couleur de la bordure.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;  :hover &amp;gt; .badge {
    border-color: orange;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C&#39;est quasi-terminé. Dans la pratique, un badge de 100 pixels de large (sans compter les bordures de 10 pixels) ça prend pas mal de place. Et donc, pour pouvoir définir des badges de différentes tailles, j&#39;utilise des &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/CSS/Using_CSS_custom_properties&quot;&gt;variables CSS&lt;/a&gt; pour redéfinir la hauteur et la largeur du badge, mais aussi l&#39;épaisseur de la bordure et la taille des caractères.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
  .badge-75 {
    --badge-size: 75px;
  }
  
  .badge-200 {
    --badge-size: 200px;
  }
  
  .badge {
    /* Un rond vert */
    height: var(--badge-size);
    width: var(--badge-size);
    border-radius: 50%;
    background-color: limegreen;
    border: calc(var(--badge-size) / 10) solid lightgray;
    /* Des initiales blanches */
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif;
    font-size: calc(var(--badge-size) / 1.75);
    font-weight: bold;
    /* Et centrées */
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }
  
  .badge-avatar {
    /* Cacher les initiales */
    color: transparent;
    /* Afficher l&#39;image */
    background-image: url(&amp;quot;https://blog.pagesd.info/public/2021/queen-of-hearts.png&amp;quot;);
    background-position: center;
    background-size: cover;
  }
&amp;lt;/style&amp;gt;

&amp;lt;div class=&amp;quot;badge badge-75&amp;quot;&amp;gt;AB&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;badge badge-200&amp;quot;&amp;gt;CD&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;badge badge-avatar badge-75&amp;quot;&amp;gt;EF&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;badge badge-avatar badge-200&amp;quot;&amp;gt;GH&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Et voilà ! A peine 30 lignes de CSS pour un résultat très satisfaisant. Maintenant, si jamais j&#39;en ai à nouveau besoin, je saurais où retrouver ça.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2021/badge-05.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;encart&quot;&gt;
&lt;p&gt;English version: &lt;a href=&quot;/2021/12/11/create-badge-avatar-css/&quot; hreflang=&quot;en-US&quot;&gt;How to create a badge / avatar in CSS&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

        </content>
        <category term="css" />
        <category term="html" />
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.pagesd.info/public/2021/systeme-bertillon.jpg" />
        <media:content xmlns:media="http://search.yahoo.com/mrss/" medium="image" url="https://blog.pagesd.info/public/2021/systeme-bertillon.jpg" />
    </entry>
    <entry>
        <title type="html">Migration sous Eleventy</title>
        <link href="https://blog.pagesd.info/2021/12/08/migration-sous-eleventy/" rel="alternate" hreflang="fr-FR" />
        <updated>2021-12-08T17:47:27.000Z</updated>
        <published>2021-12-08T17:47:27.000Z</published>
        <id>https://blog.pagesd.info/2021/12/08/migration-sous-eleventy/</id>
        <summary>Après presque 4 ans avec Jekyll, je passe sous Eleventy ce qui me permet de publier un nouveau billet pour dire que je change d&#39;outil de blogue...</summary>
        <content type="html" xml:lang="fr-FR" xml:base="https://blog.pagesd.info">
&lt;p&gt;Après presque 4 ans sous &lt;a href=&quot;/2017/01/04/migration-sous-jekyll/&quot;&gt;Jekyll&lt;/a&gt; (merci &lt;a href=&quot;https://twitter.com/jekyllrb&quot;&gt;@jekyllrb&lt;/a&gt; et merci &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;), j&#39;ai décidé de migrer mon blogue sous &lt;a href=&quot;https://11ty.dev&quot;&gt;Eleventy&lt;/a&gt;. C&#39;est un de ces trucs intéressants à faire quand on a un blogue : même si on n&#39;a rien à raconter, on peut toujours écrire un billet à chaque fois qu&#39;on change d&#39;outil pour le mettre à jour ou bien quand on renouvelle la charte graphique de son site. Dans le genre marronnier, on trouve aussi le billet pour s&#39;excuser d&#39;avoir délaissé son blog depuis un petit moment :)&lt;/p&gt;
&lt;p&gt;C&#39;est pour ça que je me contente de migrer le &amp;quot;moteur&amp;quot; mais que je ne touche surtout pas à la &lt;a href=&quot;/2019/12/16/nouvelle-css-quelques-trucs/&quot;&gt;charte graphique&lt;/a&gt;. En un, elle a à peine 2 ans ! En deux, je n&#39;en suis toujours pas lassé. En trois, ça me fera du grain à moudre en cas de besoin.&lt;/p&gt;
&lt;p&gt;Ces derniers temps, j&#39;ai traficoté les markdowns de Jekyll, adaptouillé les templates Liquid en Nunjucks, révisé les frontmatters et les excerpts, réajusté les illustrations, testé et débugué à n&#39;en plus pouvoir, mais ça y est, j&#39;ai une nouvelle fois un blogue tout neuf, toujours aussi statique et miracle de la technologie, encore hébergé sur GitHub Pages.&lt;/p&gt;
&lt;p&gt;Normalement les gens sont dithyrambiques au sujet de Eleventy et du fait qu&#39;il soit tellement simple et intuitif. Mais comme moi j&#39;ai un peu galéré avec son côté super personnalisable, ça me donnera peut-être l&#39;occasion de faire quelques billets pour expliquer comment je m&#39;y suis pris.&lt;/p&gt;
&lt;p&gt;Accrochez-vous ! Encore des billets pour ne parler que du blog et en plus par quelqu&#39;un qui avoue ne pas trop maitriser le sujet...&lt;/p&gt;

        </content>
        <category term="11ty" />
        <category term="jekyll" />
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.pagesd.info/public/2021/virginia-opossums.jpg" />
        <media:content xmlns:media="http://search.yahoo.com/mrss/" medium="image" url="https://blog.pagesd.info/public/2021/virginia-opossums.jpg" />
    </entry>
    <entry>
        <title type="html">Display a friendly name with Enum.ToString()</title>
        <link href="https://blog.pagesd.info/2021/11/26/display-friendly-name-with-enum-tostring/" rel="alternate" hreflang="en-US" />
        <updated>2021-11-26T11:12:40.000Z</updated>
        <published>2021-11-26T11:12:40.000Z</published>
        <id>https://blog.pagesd.info/2021/11/26/display-friendly-name-with-enum-tostring/</id>
        <summary>One day I needed to display a label based on the value of one Enum. So I did like every time and I used the Description attribute to define some nice labels.</summary>
        <content type="html" xml:lang="en-US" xml:base="https://blog.pagesd.info">
&lt;p&gt;One day I needed to display a label based on the value of one &lt;code&gt;Enum&lt;/code&gt;. So I did like every time and I used the &lt;code&gt;Description&lt;/code&gt; attribute to define some nice labels.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using System.ComponentModel;

public enum NatureType
{
    Ouverture,
    Modification,
    [Description(&amp;quot;Déblocage&amp;quot;)]
    Deblocage,
    [Description(&amp;quot;Alerte 3 mois&amp;quot;)]
    Alerte3Mois,
    [Description(&amp;quot;Alerte 6 mois&amp;quot;)]
    Alerte6Mois
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I copied the rather complicated code that we always been using to read this description attribute. It&#39;s a simple extension method, which is a generic method, and which uses some reflection. As I said, a simple block of code that return the description associated to an enum value or default to &lt;code&gt;.ToString()&lt;/code&gt; for values without a proper &lt;code&gt;Description&lt;/code&gt; attribute:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static string GetCaption(this Enum value)
{
    var type = value.GetType();
    var member = type.GetMember(value.ToString());
    if ((member != null &amp;amp;&amp;amp; member.Length &amp;gt; 0))
    {
        var attributes = member[0].GetCustomAttributes(typeof(System.ComponentModel.DescriptionAttribute), false);
        if ((attributes != null &amp;amp;&amp;amp; attributes.Count() &amp;gt; 0))
        {
            return ((System.ComponentModel.DescriptionAttribute)attributes.ElementAt(0)).Description;
        }
    }
    return value.ToString();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Really nothing very complicated. Except to paste this method to the StringHelpers.cs file of my project.&lt;/p&gt;
&lt;p&gt;But still, it doesn&#39;t cost anything to see if C# would have invented something even simpler or more practical lately. Except a Google Search &amp;quot;c# enum friendly name&amp;quot; + Tools + Past year.&lt;/p&gt;
&lt;p&gt;Good news! There are people who worked on it. But unfortunately, nothing new:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dejanstojanovic.net/aspnet/2021/september/adding-display-name-to-enum-values/&quot;&gt;Adding display name to Enum values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.delftstack.com/howto/csharp/csharp-enum-to-string/&quot;&gt;Convert Enum to String in C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://newbedev.com/methods-inside-enum-in-c&quot;&gt;Methods inside enum in C#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have a little time to spare so I try some new things:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum NatureType
{
    Ouverture,
    Modification,
    Déblocage,
    Alerte_3_mois,
    Alerte_6_mois
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ideally, I just have to code a &lt;code&gt;public override string ToString()&lt;/code&gt; in order to replace underscores with spaces and I&#39;m done!&lt;/p&gt;
&lt;p&gt;But where the hell can I do that?&lt;/p&gt;
&lt;p&gt;It doesn&#39;t matter, I should be able to try it with an extension method:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static string ToString(this Enum value)
{
    return value.ToString().Replace(&amp;quot;_&amp;quot;, &amp;quot; &amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, no :( My code compiles without causing an error, but then it&#39;s like this method doesn&#39;t exist! I set a breakpoint but I don&#39;t even get through and I still get the basic &lt;code&gt;.ToString()&lt;/code&gt; with underscores ???&lt;/p&gt;
&lt;p&gt;That&#39;s not going to stop me. I could live with the underscores. Or I do it differently:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static string ToCaption(this Enum value)
{
    return value.ToString().Replace(&amp;quot;_&amp;quot;, &amp;quot; &amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I had to decide with &lt;code&gt;.ToFriendlyName()&lt;/code&gt; which seems more popular, but &lt;code&gt;.ToCaption()&lt;/code&gt; is shorter :)&lt;/p&gt;
&lt;p&gt;So okay, that forces me to accept having accents in variable names (well, only in enum value names). But I think I&#39;ll use this method from now on, at least in my personal projects.&lt;/p&gt;
&lt;div class=&quot;encart&quot;&gt;
&lt;p&gt;Version en français : &lt;a href=&quot;/2021/11/25/afficher-joli-libelle-avec-enum-tostring/&quot; hreflang=&quot;fr-FR&quot;&gt;Afficher un joli libellé avec Enum.ToString()&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

        </content>
        <category term="csharp" />
        <category term="enum" />
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.pagesd.info/public/2021/cute-puppies.jpg" />
        <media:content xmlns:media="http://search.yahoo.com/mrss/" medium="image" url="https://blog.pagesd.info/public/2021/cute-puppies.jpg" />
    </entry>
    <entry>
        <title type="html">Afficher un joli libellé avec Enum.ToString()</title>
        <link href="https://blog.pagesd.info/2021/11/25/afficher-joli-libelle-avec-enum-tostring/" rel="alternate" hreflang="fr-FR" />
        <updated>2021-11-25T12:41:28.000Z</updated>
        <published>2021-11-25T12:41:28.000Z</published>
        <id>https://blog.pagesd.info/2021/11/25/afficher-joli-libelle-avec-enum-tostring/</id>
        <summary>Un jour, j&#39;ai eu besoin d&#39;afficher un libellé en fonction de la valeur d&#39;un Enum. J&#39;ai donc fait comme à chaque fois et j&#39;ai utilisé l&#39;attribut Description pour définir de jolis libellés.</summary>
        <content type="html" xml:lang="fr-FR" xml:base="https://blog.pagesd.info">
&lt;p&gt;Un jour, j&#39;ai eu besoin d&#39;afficher un libellé en fonction de la valeur d&#39;un &lt;code&gt;Enum&lt;/code&gt;. J&#39;ai donc fait comme à chaque fois et j&#39;ai utilisé l&#39;attribut &lt;code&gt;Description&lt;/code&gt; pour définir de jolis libellés.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using System.ComponentModel;

public enum NatureType
{
    Ouverture,
    Modification,
    [Description(&amp;quot;Déblocage&amp;quot;)]
    Deblocage,
    [Description(&amp;quot;Alerte 3 mois&amp;quot;)]
    Alerte3Mois,
    [Description(&amp;quot;Alerte 6 mois&amp;quot;)]
    Alerte6Mois
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Puis ensuite, j&#39;ai repris le code assez compliqué dont on use et abuse depuis toujours pour récupérer cette description. C&#39;est une simple méthode d&#39;extension, qui est générique, et qui utilise une pointe de rélexion. Comme je le disais, un truc simple qui est malgré tout capable de me renvoyer la description associée à une valeur de l&#39;enum ou au pire de faire un &lt;code&gt;.ToString()&lt;/code&gt; pour les valeurs sans attribut &lt;code&gt;Description&lt;/code&gt; :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static string GetCaption(this Enum value)
{
    var type = value.GetType();
    var member = type.GetMember(value.ToString());
    if ((member != null &amp;amp;&amp;amp; member.Length &amp;gt; 0))
    {
        var attributes = member[0].GetCustomAttributes(typeof(System.ComponentModel.DescriptionAttribute), false);
        if ((attributes != null &amp;amp;&amp;amp; attributes.Count() &amp;gt; 0))
        {
            return ((System.ComponentModel.DescriptionAttribute)attributes.ElementAt(0)).Description;
        }
    }
    return value.ToString();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vraiment rien de compliqué. À part d&#39;ajouter cette méthode au fichier StringHelpers.cs de mon projet.&lt;/p&gt;
&lt;p&gt;Mais quand même, ça ne me coûte rien d&#39;essayer de voir si depuis le temps C# n&#39;aurait rien inventé d&#39;encore plus simple ou plus pratique. À part un Google Search &amp;quot;c# enum friendly name&amp;quot; + Tools + Past year.&lt;/p&gt;
&lt;p&gt;Bonne nouvelle, il y a des personnes qui s&#39;y sont attelées, mais malheureusement, rien de bien nouveau :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dejanstojanovic.net/aspnet/2021/september/adding-display-name-to-enum-values/&quot;&gt;Adding display name to Enum values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.delftstack.com/howto/csharp/csharp-enum-to-string/&quot;&gt;Convert Enum to String in C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://newbedev.com/methods-inside-enum-in-c&quot;&gt;Methods inside enum in C#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;J&#39;ai un peu de temps à perdre alors je tente des trucs :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum NatureType
{
    Ouverture,
    Modification,
    Déblocage,
    Alerte_3_mois,
    Alerte_6_mois
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Idéalement je n&#39;ai plus qu&#39;à faire un &lt;code&gt;public override string ToString()&lt;/code&gt; pour remplacer les soulignés par des espaces et le tour est joué !&lt;/p&gt;
&lt;p&gt;Sauf que où diable faire ça ?&lt;/p&gt;
&lt;p&gt;C&#39;est pas grave, je dois pouvoir tenter le coup via une méthode d&#39;extension :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static string ToString(this Enum value)
{
    return value.ToString().Replace(&amp;quot;_&amp;quot;, &amp;quot; &amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ben non :( Ça compile sans provoquer d&#39;erreur, mais ensuite c&#39;est comme si ça n&#39;existait pas ! J&#39;ai beau mettre un point d&#39;arrêt, je n&#39;y passe même pas et cela renvoie toujours le &lt;code&gt;.ToString()&lt;/code&gt; de base avec les soulignés ???&lt;/p&gt;
&lt;p&gt;C&#39;est pas ça qui va m&#39;arrêter. Soit je prends mon parti des soulignés. Soit je le fais quand même :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static string ToCaption(this Enum value)
{
    return value.ToString().Replace(&amp;quot;_&amp;quot;, &amp;quot; &amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;J&#39;ai hésité avec &lt;code&gt;.ToFriendlyName()&lt;/code&gt; qui semble un peu plus tendance, mais  &lt;code&gt;.ToCaption()&lt;/code&gt; a l&#39;avantage d&#39;être plus court :)&lt;/p&gt;
&lt;p&gt;Alors d&#39;accord, ça m&#39;oblige à accepter d&#39;avoir quelquefois des accents dans les noms de variables (enfin seulement dans les noms de valeurs d&#39;enum). Mais je pense que désormais ça va être ma nouvelle façon de faire, au moins dans mes projets personnels.&lt;/p&gt;
&lt;div class=&quot;encart&quot;&gt;
&lt;p&gt;English version: &lt;a href=&quot;/2021/11/26/display-friendly-name-with-enum-tostring/&quot; hreflang=&quot;en-US&quot;&gt;Display a friendly name with Enum.ToString()&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

        </content>
        <category term="csharp" />
        <category term="enum" />
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.pagesd.info/public/2021/cute-puppies.jpg" />
        <media:content xmlns:media="http://search.yahoo.com/mrss/" medium="image" url="https://blog.pagesd.info/public/2021/cute-puppies.jpg" />
    </entry>
</feed>